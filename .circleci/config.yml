version: 2

commands:
  # save_cache:
  #   key: v3-npm-deps-{{ .Branch }}-{{ checksum "**/package-lock.json" }}
  #   paths:
  #     - ~/project

  # restore_cache:
  #   key:
  #     - node-v1-{{ .Branch }}-{{ checksum "**/package-lock.json" }}
  #     - node-v1-{{ .Branch }}-
  #     - node-v1-

  # steps:
  #   - restore_cache:
  #       keys:
  #         # when lock file changes, use increasingly general patterns to restore cache
  #         - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
  #         - node-v1-{{ .Branch }}-
  #         - node-v1-
  #   - save_cache:
  #       paths:
  #         - ~/usr/local/lib/node_modules  # location depends on npm version
  #       key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}

  build-one:
    steps:
      - checkout
      - run: echo "checkout app1"
      - restore_cache:
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "**/package-lock.json" }}
            - node-v1-{{ .Branch }}-
            - node-v1-
      - run: |
          cd app1
          npm install

  # build-two:
  #   steps:
  #     - checkout
  #     - run: echo "Welcome project"
  #     - run: |
  #         cd app2
  #         npm install
  #         node welcome.js

# executors:
#   docker-executor:
#     docker:
#       - image: circleci/node:10.16.0

jobs:
  one:
    docker:
      - image: circleci/node:10.16.0
    steps:
      - checkout
      - run: echo "checkout app1"
      - restore_cache:
          key:
            - node-v1-{{ .Branch }}-{{ checksum "app1/package-lock.json" }}
      - run: |
          cd app1
          npm install
      - save_cache:
          paths:
            - ~/usr/local/lib/node_modules
          key: node-v1-{{ .Branch }}-{{ checksum "app1/package-lock.json" }}
      - run: |
          cd app1
          node welcome.js
  # two:
  #   executor: docker-executor
  #   steps:
  #     - build-two

workflows:
  version: 2
  one_and_two:
    jobs:
      - one
      # - two:
      #     requires:
      #       - one
# version: 2
# jobs:
#   one:
#     docker:
#       - image: circleci/node:10.16.02.4.1
#     steps:
#       - checkout
#       - run: echo "Hello project"
#       - run: |
#           cd app1
#           node hello.js
#   two:
#     docker:
#       - image: circleci/node:10.16.0
#     steps:
#       - checkout
#       - run: echo "Welcome project"
#       - run: |
#           cd app2
#           node welcome.js

# workflows:
#   version: 2
#   one_and_two:
#     jobs:
#       - one
#       - two:
#           requires:
#             - one
